{
  "openapi": "3.0.1",
  "info": {
    "title": "Payroll Service API",
    "description": "Multi-tenant API powering three major payroll service websites: PaystubsNow.com, CheckstubMaker.com, and TheBestPaystubs.com. The API automatically handles site-specific request scoping based on the calling domain. All endpoints are accessible via the respective staging domains for each site.",
    "version": "1.0.0",
    "contact": {
      "name": "API Support",
      "email": "support@paystub.dev"
    }
  },
  "servers": [
    {
      "url": "https://psn-api.paystub.dev",
      "description": "PaystubsNow Staging"
    },
    {
      "url": "https://csm-api.paystub.dev",
      "description": "CheckstubMaker Staging"
    },
    {
      "url": "https://tbp-api.paystub.dev",
      "description": "TheBestPaystubs Staging"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "description": "Use your API token"
      }
    },
    "schemas": {
      "SuccessResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "data": {
            "type": "object"
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": false
          },
          "message": {
            "type": "string"
          },
          "errors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "site_id": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "role_id": {
            "type": "integer",
            "format": "int64",
            "example": 2
          },
          "name": {
            "type": "string",
            "example": "John Doe"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "john@example.com"
          },
          "klaviyo_id": {
            "type": "string",
            "nullable": true
          },
          "slack_id": {
            "type": "string",
            "nullable": true
          },
          "email_verified_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "total_spent": {
            "type": "number",
            "format": "float",
            "example": 1250.50
          },
          "metadata": {
            "type": "object",
            "nullable": true
          },
          "settings": {
            "type": "object",
            "nullable": true
          },
          "status": {
            "type": "string",
            "enum": ["Active", "Pending", "Suspended", "Banned"],
            "example": "Active"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "site": {
            "$ref": "#/components/schemas/Site"
          },
          "role": {
            "$ref": "#/components/schemas/Role"
          },
          "meta": {
            "type": "object",
            "properties": {
              "is_verified": {
                "type": "boolean"
              },
              "permissions": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "Site": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "identifier": {
            "type": "string",
            "maxLength": 3
          },
          "name": {
            "type": "string"
          },
          "logo": {
            "type": "string",
            "nullable": true
          },
          "payment_processors": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": ["Stripe", "NMI", "Coinbase"]
            }
          },
          "document_types": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": ["Paystub", "W2", "1099-MISC", "Invoice"]
            }
          },
          "status": {
            "type": "string",
            "enum": ["active", "inactive", "maintenance", "closed"]
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Role": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "enum": ["Owner", "Manager", "Developer", "Customer Support", "Marketing", "Customer"]
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "permissions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Company": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "site_id": {
            "type": "integer",
            "format": "int64"
          },
          "user_id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "example": "Acme Inc"
          },
          "email": {
            "type": "string",
            "format": "email",
            "nullable": true,
            "example": "contact@acme.com"
          },
          "phone": {
            "type": "string",
            "nullable": true,
            "example": "+1234567890"
          },
          "ein": {
            "type": "string",
            "nullable": true,
            "example": "12-3456789"
          },
          "masked_ein": {
            "type": "string",
            "nullable": true,
            "example": "XX-XXX6789"
          },
          "address": {
            "type": "object",
            "properties": {
              "address1": {
                "type": "string",
                "example": "123 Main St"
              },
              "address2": {
                "type": "string",
                "nullable": true,
                "example": "Suite 100"
              },
              "city": {
                "type": "string",
                "example": "New York"
              },
              "state": {
                "type": "string",
                "nullable": true,
                "example": "NY"
              },
              "zip": {
                "type": "string",
                "example": "10001"
              },
              "country": {
                "type": "string",
                "example": "US"
              },
              "full_address": {
                "type": "string",
                "example": "123 Main St, Suite 100, New York, NY 10001, US"
              },
              "formatted_address": {
                "type": "string",
                "example": "123 Main St<br>Suite 100<br>New York, NY 10001<br>US"
              }
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "employees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Employee"
            }
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Document"
            }
          },
          "employees_count": {
            "type": "integer",
            "nullable": true
          },
          "documents_count": {
            "type": "integer",
            "nullable": true
          }
        }
      },
      "Employee": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "site_id": {
            "type": "integer",
            "format": "int64"
          },
          "user_id": {
            "type": "integer",
            "format": "int64"
          },
          "company_id": {
            "type": "integer",
            "format": "int64"
          },
          "first_name": {
            "type": "string",
            "example": "John"
          },
          "last_name": {
            "type": "string",
            "example": "Doe"
          },
          "full_name": {
            "type": "string",
            "example": "John Doe"
          },
          "email": {
            "type": "string",
            "format": "email",
            "nullable": true,
            "example": "john@example.com"
          },
          "phone": {
            "type": "string",
            "nullable": true,
            "example": "+1234567890"
          },
          "ssn": {
            "type": "string",
            "nullable": true,
            "example": "123-45-6789"
          },
          "masked_ssn": {
            "type": "string",
            "nullable": true,
            "example": "XXX-XX-6789"
          },
          "additional_info": {
            "type": "object",
            "nullable": true
          },
          "earnings": {
            "type": "object",
            "nullable": true
          },
          "deductions": {
            "type": "object",
            "nullable": true
          },
          "address": {
            "type": "object",
            "properties": {
              "address1": {
                "type": "string",
                "example": "123 Main St"
              },
              "address2": {
                "type": "string",
                "nullable": true,
                "example": "Apt 4B"
              },
              "city": {
                "type": "string",
                "example": "New York"
              },
              "state": {
                "type": "string",
                "nullable": true,
                "example": "NY"
              },
              "zip": {
                "type": "string",
                "example": "10001"
              },
              "country": {
                "type": "string",
                "example": "US"
              },
              "full_address": {
                "type": "string",
                "example": "123 Main St, Apt 4B, New York, NY 10001, US"
              },
              "formatted_address": {
                "type": "string",
                "example": "123 Main St<br>Apt 4B<br>New York, NY 10001<br>US"
              }
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "company": {
            "$ref": "#/components/schemas/Company"
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Document"
            }
          },
          "documents_count": {
            "type": "integer",
            "nullable": true
          }
        }
      },
      "Document": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "site_id": {
            "type": "integer",
            "format": "int64"
          },
          "user_id": {
            "type": "integer",
            "format": "int64"
          },
          "order_id": {
            "type": "integer",
            "format": "int64"
          },
          "company_id": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "employee_id": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "uuid": {
            "type": "string",
            "format": "uuid",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "type": {
            "type": "string",
            "enum": ["Paystub", "W2", "1099-MISC", "Invoice"]
          },
          "template_id": {
            "type": "string",
            "nullable": true
          },
          "color_id": {
            "type": "string",
            "nullable": true
          },
          "quantity": {
            "type": "integer",
            "minimum": 1,
            "default": 1
          },
          "content": {
            "type": "object"
          },
          "storage_data": {
            "type": "object",
            "nullable": true
          },
          "errors": {
            "type": "object",
            "nullable": true
          },
          "status": {
            "type": "string",
            "enum": ["Pending", "Processing", "Completed", "Failed"]
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "company": {
            "$ref": "#/components/schemas/Company"
          },
          "employee": {
            "$ref": "#/components/schemas/Employee"
          }
        }
      },
      "Order": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "site_id": {
            "type": "integer",
            "format": "int64"
          },
          "user_id": {
            "type": "integer",
            "format": "int64"
          },
          "uuid": {
            "type": "string",
            "format": "uuid"
          },
          "currency": {
            "type": "string",
            "maxLength": 3,
            "default": "USD"
          },
          "total": {
            "type": "number",
            "format": "decimal",
            "default": 0
          },
          "discount": {
            "type": "number",
            "format": "decimal",
            "default": 0
          },
          "tax": {
            "type": "number",
            "format": "decimal",
            "default": 0
          },
          "net": {
            "type": "number",
            "format": "decimal",
            "default": 0
          },
          "status": {
            "type": "string",
            "enum": ["Pending", "Processing", "Completed", "Cancelled", "Refunded", "Failed"],
            "default": "Pending"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Document"
            }
          },
          "transactions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Transaction"
            }
          }
        }
      },
      "Transaction": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "site_id": {
            "type": "integer",
            "format": "int64"
          },
          "user_id": {
            "type": "integer",
            "format": "int64"
          },
          "order_id": {
            "type": "integer",
            "format": "int64"
          },
          "processor": {
            "type": "string",
            "enum": ["Stripe", "NMI", "Coinbase"]
          },
          "processor_id": {
            "type": "string",
            "nullable": true
          },
          "processor_response": {
            "type": "string",
            "nullable": true
          },
          "amount": {
            "type": "number",
            "format": "decimal"
          },
          "type": {
            "type": "string",
            "enum": ["Sale", "Refund", "Void", "Free"]
          },
          "status": {
            "type": "string",
            "enum": ["pending", "processing", "completed", "failed"]
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Post": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "site_id": {
            "type": "integer",
            "format": "int64"
          },
          "post_category_id": {
            "type": "integer",
            "format": "int64"
          },
          "user_id": {
            "type": "integer",
            "format": "int64"
          },
          "type": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "slug": {
            "type": "string"
          },
          "excerpt": {
            "type": "string",
            "nullable": true
          },
          "content": {
            "type": "string"
          },
          "meta": {
            "type": "object",
            "nullable": true
          },
          "faq": {
            "type": "object",
            "nullable": true
          },
          "fact_check": {
            "type": "object",
            "nullable": true
          },
          "minutes_to_read": {
            "type": "integer"
          },
          "view_count": {
            "type": "integer"
          },
          "is_draft": {
            "type": "boolean"
          },
          "published_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },

      "PostCategory": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "site_id": {
            "type": "integer",
            "format": "int64"
          },
          "type": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "slug": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Authentication",
      "description": "Operations about user authentication"
    },
    {
      "name": "Companies",
      "description": "Operations about companies"
    },
    {
      "name": "Employees",
      "description": "Operations about employees"
    },
    {
      "name": "Documents",
      "description": "Operations about documents"
    },
    {
      "name": "Orders",
      "description": "Operations about orders"
    },
    {
      "name": "Transactions",
      "description": "Operations about transactions"
    },
    {
      "name": "Posts",
      "description": "Operations about posts"
    },
    {
      "name": "Post Categories",
      "description": "Operations about post categories"
    }
  ],
  "paths": {
    "/auth/login": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Login a user",
        "description": "Authenticate a user and return an access token",
        "operationId": "login",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["email", "password"],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "john@example.com"
                  },
                  "password": {
                    "type": "string",
                    "format": "password",
                    "minLength": 8,
                    "example": "password123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SuccessResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "user": {
                              "$ref": "#/components/schemas/User"
                            },
                            "token": {
                              "type": "string",
                              "description": "API token"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Register a new user",
        "description": "Create a new user account",
        "operationId": "register",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["name", "email", "password", "password_confirmation"],
                "properties": {
                  "name": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "John Doe"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "maxLength": 255,
                    "example": "john@example.com"
                  },
                  "password": {
                    "type": "string",
                    "format": "password",
                    "minLength": 8,
                    "example": "password123"
                  },
                  "password_confirmation": {
                    "type": "string",
                    "example": "password123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User successfully registered",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SuccessResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "user": {
                              "$ref": "#/components/schemas/User"
                            },
                            "token": {
                              "type": "string",
                              "description": "API token"
                            }
                          }
                        },
                        "message": {
                          "type": "string",
                          "example": "User registered successfully"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "422": {
            "description": "Validation errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Logout the current user",
        "description": "Revoke the current access token",
        "operationId": "logout",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully logged out",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SuccessResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object"
                        },
                        "message": {
                          "type": "string",
                          "example": "Successfully logged out"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/me": {
      "get": {
        "tags": ["Authentication"],
        "summary": "Get authenticated user details",
        "description": "Return the current authenticated user's information",
        "operationId": "me",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "User information retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SuccessResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "user": {
                              "$ref": "#/components/schemas/User"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/refresh": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Refresh access token",
        "description": "Generate a new API token",
        "operationId": "refreshToken",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Token refreshed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SuccessResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "token": {
                              "type": "string",
                              "description": "New API token"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/forgot-password": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Send password reset link",
        "description": "Send a password reset link to the user's email",
        "operationId": "forgotPassword",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["email"],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "john@example.com"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password reset link sent successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SuccessResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Password reset link sent successfully"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "422": {
            "description": "Validation errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/reset-password": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Reset password",
        "description": "Reset user's password using the token from email",
        "operationId": "resetPassword",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["token", "email", "password", "password_confirmation"],
                "properties": {
                  "token": {
                    "type": "string",
                    "example": "1234567890abcdef"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "john@example.com"
                  },
                  "password": {
                    "type": "string",
                    "format": "password",
                    "minLength": 8,
                    "example": "newpassword123"
                  },
                  "password_confirmation": {
                    "type": "string",
                    "example": "newpassword123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password reset successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SuccessResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Password has been reset successfully"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "422": {
            "description": "Validation errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/companies": {
      "get": {
        "tags": ["Companies"],
        "summary": "List all companies",
        "description": "Get a paginated list of companies",
        "operationId": "listCompanies",
        "security": [{"bearerAuth": []}],
        "parameters": [
          {
            "name": "filter[name]",
            "in": "query",
            "description": "Filter by company name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[email]",
            "in": "query",
            "description": "Filter by company email",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort by field (prefix with - for desc)",
            "schema": {
              "type": "string",
              "enum": ["name", "-name", "created_at", "-created_at"]
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Include related resources",
            "schema": {
              "type": "string",
              "enum": ["employees", "documents"]
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Number of items per page",
            "schema": {
              "type": "integer",
              "default": 15
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of companies",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Company"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "integer",
                          "example": 1
                        },
                        "from": {
                          "type": "integer",
                          "example": 1
                        },
                        "last_page": {
                          "type": "integer",
                          "example": 3
                        },
                        "per_page": {
                          "type": "integer",
                          "example": 15
                        },
                        "to": {
                          "type": "integer",
                          "example": 15
                        },
                        "total": {
                          "type": "integer",
                          "example": 45
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Companies"],
        "summary": "Create a company",
        "description": "Create a new company record",
        "operationId": "createCompany",
        "security": [{"bearerAuth": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["name", "address1", "city", "zip", "country"],
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Acme Inc"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "contact@acme.com"
                  },
                  "phone": {
                    "type": "string",
                    "example": "+1234567890"
                  },
                  "ein": {
                    "type": "string",
                    "pattern": "^\\d{2}-\\d{7}$",
                    "example": "12-3456789"
                  },
                  "address1": {
                    "type": "string",
                    "example": "123 Main St"
                  },
                  "address2": {
                    "type": "string",
                    "example": "Suite 100"
                  },
                  "city": {
                    "type": "string",
                    "example": "New York"
                  },
                  "state": {
                    "type": "string",
                    "example": "NY"
                  },
                  "zip": {
                    "type": "string",
                    "example": "10001"
                  },
                  "country": {
                    "type": "string",
                    "minLength": 2,
                    "maxLength": 2,
                    "example": "US"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Company created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SuccessResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Company"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/companies/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "description": "Company ID",
          "schema": {
            "type": "integer",
            "format": "int64"
          }
        }
      ],
      "get": {
        "tags": ["Companies"],
        "summary": "Get a company",
        "description": "Get company details by ID",
        "operationId": "getCompany",
        "security": [{"bearerAuth": []}],
        "parameters": [
          {
            "name": "include",
            "in": "query",
            "description": "Include related resources",
            "schema": {
              "type": "string",
              "enum": ["employees", "documents"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Company details",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SuccessResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Company"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Companies"],
        "summary": "Update a company",
        "description": "Update company details",
        "operationId": "updateCompany",
        "security": [{"bearerAuth": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "phone": {
                    "type": "string"
                  },
                  "ein": {
                    "type": "string",
                    "pattern": "^\\d{2}-\\d{7}$"
                  },
                  "address1": {
                    "type": "string"
                  },
                  "address2": {
                    "type": "string"
                  },
                  "city": {
                    "type": "string"
                  },
                  "state": {
                    "type": "string"
                  },
                  "zip": {
                    "type": "string"
                  },
                  "country": {
                    "type": "string",
                    "minLength": 2,
                    "maxLength": 2
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Company updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SuccessResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Company"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Companies"],
        "summary": "Delete a company",
        "description": "Delete a company",
        "operationId": "deleteCompany",
        "security": [{"bearerAuth": []}],
        "responses": {
          "200": {
            "description": "Company deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SuccessResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Company deleted successfully"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/employees": {
      "get": {
        "tags": ["Employees"],
        "summary": "List all employees",
        "description": "Get a paginated list of employees",
        "operationId": "listEmployees",
        "security": [{"bearerAuth": []}],
        "parameters": [
          {
            "name": "filter[company_id]",
            "in": "query",
            "description": "Filter by company ID",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "filter[first_name]",
            "in": "query",
            "description": "Filter by first name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[last_name]",
            "in": "query",
            "description": "Filter by last name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[email]",
            "in": "query",
            "description": "Filter by email",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort by field",
            "schema": {
              "type": "string",
              "enum": [
                "first_name",
                "-first_name",
                "last_name",
                "-last_name",
                "company_id",
                "-company_id",
                "created_at",
                "-created_at"
              ]
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Include related resources",
            "schema": {
              "type": "string",
              "enum": ["company", "documents"]
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Number of items per page",
            "schema": {
              "type": "integer",
              "default": 15
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of employees",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Employee"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "integer",
                          "example": 1
                        },
                        "from": {
                          "type": "integer",
                          "example": 1
                        },
                        "last_page": {
                          "type": "integer",
                          "example": 3
                        },
                        "per_page": {
                          "type": "integer",
                          "example": 15
                        },
                        "to": {
                          "type": "integer",
                          "example": 15
                        },
                        "total": {
                          "type": "integer",
                          "example": 45
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Employees"],
        "summary": "Create an employee",
        "description": "Create a new employee record",
        "operationId": "createEmployee",
        "security": [{"bearerAuth": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "company_id",
                  "first_name",
                  "last_name",
                  "address1",
                  "city",
                  "zip",
                  "country"
                ],
                "properties": {
                  "company_id": {
                    "type": "integer",
                    "description": "ID of the company"
                  },
                  "first_name": {
                    "type": "string"
                  },
                  "last_name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "phone": {
                    "type": "string"
                  },
                  "ssn": {
                    "type": "string",
                    "pattern": "^\\d{3}-?\\d{2}-?\\d{4}$"
                  },
                  "address1": {
                    "type": "string"
                  },
                  "address2": {
                    "type": "string"
                  },
                  "city": {
                    "type": "string"
                  },
                  "state": {
                    "type": "string"
                  },
                  "zip": {
                    "type": "string"
                  },
                  "country": {
                    "type": "string",
                    "minLength": 2,
                    "maxLength": 2
                  },
                  "additional_info": {
                    "type": "object"
                  },
                  "earnings": {
                    "type": "object"
                  },
                  "deductions": {
                    "type": "object"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Employee created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SuccessResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Employee"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/employees/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "description": "Employee ID",
          "schema": {
            "type": "integer",
            "format": "int64"
          }
        }
      ],
      "get": {
        "tags": ["Employees"],
        "summary": "Get an employee",
        "description": "Get employee details by ID",
        "operationId": "getEmployee",
        "security": [{"bearerAuth": []}],
        "parameters": [
          {
            "name": "include",
            "in": "query",
            "description": "Include related resources",
            "schema": {
              "type": "string",
              "enum": ["company", "documents"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Employee details",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SuccessResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Employee"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Employees"],
        "summary": "Update an employee",
        "description": "Update employee details",
        "operationId": "updateEmployee",
        "security": [{"bearerAuth": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "company_id": {
                    "type": "integer"
                  },
                  "first_name": {
                    "type": "string"
                  },
                  "last_name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "phone": {
                    "type": "string"
                  },
                  "ssn": {
                    "type": "string",
                    "pattern": "^\\d{3}-?\\d{2}-?\\d{4}$"
                  },
                  "address1": {
                    "type": "string"
                  },
                  "address2": {
                    "type": "string"
                  },
                  "city": {
                    "type": "string"
                  },
                  "state": {
                    "type": "string"
                  },
                  "zip": {
                    "type": "string"
                  },
                  "country": {
                    "type": "string",
                    "minLength": 2,
                    "maxLength": 2
                  },
                  "additional_info": {
                    "type": "object"
                  },
                  "earnings": {
                    "type": "object"
                  },
                  "deductions": {
                    "type": "object"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Employee updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SuccessResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Employee"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Employees"],
        "summary": "Delete an employee",
        "description": "Delete an employee",
        "operationId": "deleteEmployee",
        "security": [{"bearerAuth": []}],
        "responses": {
          "200": {
            "description": "Employee deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SuccessResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Employee deleted successfully"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/documents": {
      "get": {
        "tags": ["Documents"],
        "summary": "List all documents",
        "description": "Get a paginated list of documents",
        "operationId": "listDocuments",
        "security": [{"bearerAuth": []}],
        "parameters": [
          {
            "name": "filter[uuid]",
            "in": "query",
            "description": "Filter by UUID",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "filter[type]",
            "in": "query",
            "description": "Filter by document type",
            "schema": {
              "type": "string",
              "enum": ["Paystub", "W2", "1099-MISC", "Invoice"]
            }
          },
          {
            "name": "filter[status]",
            "in": "query",
            "description": "Filter by status",
            "schema": {
              "type": "string",
              "enum": ["Pending", "Processing", "Completed", "Failed"]
            }
          },
          {
            "name": "filter[company_id]",
            "in": "query",
            "description": "Filter by company ID",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "filter[employee_id]",
            "in": "query",
            "description": "Filter by employee ID",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Include related resources",
            "schema": {
              "type": "string",
              "enum": ["company", "employee"]
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort by field",
            "schema": {
              "type": "string",
              "enum": ["created_at", "-created_at", "type", "-type", "status", "-status"]
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Number of items per page",
            "schema": {
              "type": "integer",
              "default": 15
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of documents",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Document"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "integer",
                          "example": 1
                        },
                        "from": {
                          "type": "integer",
                          "example": 1
                        },
                        "last_page": {
                          "type": "integer",
                          "example": 3
                        },
                        "per_page": {
                          "type": "integer",
                          "example": 15
                        },
                        "to": {
                          "type": "integer",
                          "example": 15
                        },
                        "total": {
                          "type": "integer",
                          "example": 45
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/documents/{uuid}/download": {
      "parameters": [
        {
          "name": "uuid",
          "in": "path",
          "required": true,
          "description": "Document UUID",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "get": {
        "tags": ["Documents"],
        "summary": "Download a document",
        "description": "Download a document by UUID",
        "operationId": "downloadDocument",
        "security": [{"bearerAuth": []}],
        "responses": {
          "200": {
            "description": "Document file",
            "content": {
              "application/pdf": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "404": {
            "description": "Document not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/orders": {
      "get": {
        "tags": ["Orders"],
        "summary": "List all orders",
        "description": "Get a paginated list of orders",
        "operationId": "listOrders",
        "security": [{"bearerAuth": []}],
        "parameters": [
          {
            "name": "filter[status]",
            "in": "query",
            "description": "Filter by status",
            "schema": {
              "type": "string",
              "enum": ["Pending", "Processing", "Completed", "Cancelled", "Refunded", "Failed"]
            }
          },
          {
            "name": "filter[date_from]",
            "in": "query",
            "description": "Filter by start date",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "filter[date_to]",
            "in": "query",
            "description": "Filter by end date",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "filter[total_min]",
            "in": "query",
            "description": "Filter by minimum total",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "filter[total_max]",
            "in": "query",
            "description": "Filter by maximum total",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Include related resources",
            "schema": {
              "type": "string",
              "enum": ["documents", "transactions"]
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort by field",
            "schema": {
              "type": "string",
              "enum": ["created_at", "-created_at", "total", "-total", "status", "-status"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of orders",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {"$ref": "#/components/schemas/SuccessResponse"},
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Order"
                          }
                        },
                        "meta": {
                          "type": "object",
                          "properties": {
                            "total": {"type": "integer"},
                            "per_page": {"type": "integer"},
                            "current_page": {"type": "integer"},
                            "last_page": {"type": "integer"}
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/orders/{uuid}": {
      "parameters": [
        {
          "name": "uuid",
          "in": "path",
          "required": true,
          "description": "Order UUID",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "get": {
        "tags": ["Orders"],
        "summary": "Get an order",
        "description": "Get order details by UUID",
        "operationId": "getOrder",
        "security": [{"bearerAuth": []}],
        "parameters": [
          {
            "name": "include",
            "in": "query",
            "description": "Include related resources",
            "schema": {
              "type": "string",
              "enum": ["documents", "transactions"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Order details",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {"$ref": "#/components/schemas/SuccessResponse"},
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Order"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/transactions": {
      "get": {
        "tags": ["Transactions"],
        "summary": "List all transactions",
        "description": "Get a paginated list of transactions",
        "operationId": "listTransactions",
        "security": [{"bearerAuth": []}],
        "parameters": [
          {
            "name": "filter[status]",
            "in": "query",
            "description": "Filter by status",
            "schema": {
              "type": "string",
              "enum": ["pending", "processing", "completed", "failed"]
            }
          },
          {
            "name": "filter[type]",
            "in": "query",
            "description": "Filter by type",
            "schema": {
              "type": "string",
              "enum": ["Sale", "Refund", "Void", "Free"]
            }
          },
          {
            "name": "filter[processor]",
            "in": "query",
            "description": "Filter by payment processor",
            "schema": {
              "type": "string",
              "enum": ["Stripe", "NMI", "Coinbase"]
            }
          },
          {
            "name": "filter[order_id]",
            "in": "query",
            "description": "Filter by order ID",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "filter[amount_min]",
            "in": "query",
            "description": "Filter by minimum amount",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "filter[amount_max]",
            "in": "query",
            "description": "Filter by maximum amount",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Include related resources",
            "schema": {
              "type": "string",
              "enum": ["order", "user"]
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort by field",
            "schema": {
              "type": "string",
              "enum": ["created_at", "-created_at", "amount", "-amount", "status", "-status", "type", "-type"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of transactions",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {"$ref": "#/components/schemas/SuccessResponse"},
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Transaction"
                          }
                        },
                        "meta": {
                          "type": "object",
                          "properties": {
                            "total": {"type": "integer"},
                            "per_page": {"type": "integer"},
                            "current_page": {"type": "integer"},
                            "last_page": {"type": "integer"}
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/transactions/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "description": "Transaction ID",
          "schema": {
            "type": "integer",
            "format": "int64"
          }
        }
      ],
      "get": {
        "tags": ["Transactions"],
        "summary": "Get a transaction",
        "description": "Get transaction details by ID",
        "operationId": "getTransaction",
        "security": [{"bearerAuth": []}],
        "parameters": [
          {
            "name": "include",
            "in": "query",
            "description": "Include related resources",
            "schema": {
              "type": "string",
              "enum": ["order", "user"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Transaction details",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {"$ref": "#/components/schemas/SuccessResponse"},
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Transaction"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/post-categories": {
      "get": {
        "tags": ["Post Categories"],
        "summary": "List post categories",
        "description": "Get a paginated list of post categories",
        "operationId": "listPostCategories",
        "security": [{"bearerAuth": []}],
        "parameters": [
          {
            "name": "filter[type]",
            "in": "query",
            "description": "Filter by category type",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[country]",
            "in": "query",
            "description": "Filter by country",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[name]",
            "in": "query",
            "description": "Filter by name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Include related resources",
            "schema": {
              "type": "string",
              "enum": ["posts", "site"]
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort by field",
            "schema": {
              "type": "string",
              "enum": ["name", "-name", "created_at", "-created_at"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of post categories",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {"$ref": "#/components/schemas/SuccessResponse"},
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/PostCategory"
                          }
                        },
                        "meta": {
                          "type": "object",
                          "properties": {
                            "total": {"type": "integer"},
                            "per_page": {"type": "integer"},
                            "current_page": {"type": "integer"},
                            "last_page": {"type": "integer"}
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/post-categories/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "description": "Post Category ID",
          "schema": {
            "type": "integer",
            "format": "int64"
          }
        }
      ],
      "get": {
        "tags": ["Post Categories"],
        "summary": "Get a post category",
        "description": "Get post category details by ID",
        "operationId": "getPostCategory",
        "security": [{"bearerAuth": []}],
        "parameters": [
          {
            "name": "include",
            "in": "query",
            "description": "Include related resources",
            "schema": {
              "type": "string",
              "enum": ["posts", "site"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Post category details",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {"$ref": "#/components/schemas/SuccessResponse"},
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/PostCategory"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/posts": {
      "get": {
        "tags": ["Posts"],
        "summary": "List posts",
        "description": "Get a paginated list of posts",
        "operationId": "listPosts",
        "security": [{"bearerAuth": []}],
        "parameters": [
          {
            "name": "filter[type]",
            "in": "query",
            "description": "Filter by post type",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[country]",
            "in": "query",
            "description": "Filter by country",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[title]",
            "in": "query",
            "description": "Filter by title",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[post_category_id]",
            "in": "query",
            "description": "Filter by category ID",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "filter[is_draft]",
            "in": "query",
            "description": "Filter by draft status",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Include related resources",
            "schema": {
              "type": "string",
              "enum": ["postCategory", "user", "site"]
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort by field",
            "schema": {
              "type": "string",
              "enum": ["title", "-title", "created_at", "-created_at", "published_at", "-published_at", "view_count", "-view_count"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of posts",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {"$ref": "#/components/schemas/SuccessResponse"},
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Post"
                          }
                        },
                        "meta": {
                          "type": "object",
                          "properties": {
                            "total": {"type": "integer"},
                            "per_page": {"type": "integer"},
                            "current_page": {"type": "integer"},
                            "last_page": {"type": "integer"}
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/posts/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "description": "Post ID",
          "schema": {
            "type": "integer",
            "format": "int64"
          }
        }
      ],
      "get": {
        "tags": ["Posts"],
        "summary": "Get a post",
        "description": "Get post details by ID",
        "operationId": "getPost",
        "security": [{"bearerAuth": []}],
        "parameters": [
          {
            "name": "include",
            "in": "query",
            "description": "Include related resources",
            "schema": {
              "type": "string",
              "enum": ["postCategory", "user", "site"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Post details",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {"$ref": "#/components/schemas/SuccessResponse"},
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Post"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    }
  }
}